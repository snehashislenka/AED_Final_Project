/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.userdashboard;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSeparator;
import javax.swing.border.Border;
import javax.xml.parsers.ParserConfigurationException;
import model.Flight.Flight;
import org.xml.sax.SAXException;
import ui.flightUIPanels.CallFlightUIPanels;
import ui.flightUIPanels.FlightSeatSelection;
import util.flights.FlightUtils;

/**
 *
 * @author slenk
 */
public class FlightsDisplay extends javax.swing.JPanel {

    /**
     * Creates new form demo
     */
    
    private String departureCity;
    private String arrivalCity;
    private String departureDate;
//    private String arrivalDate;
    private int passenger;
    String formattedDate;
    
    public FlightsDisplay(String departureCity, String arrivalCity, 
        String departureDate,String formattedDate, int passenger ) throws IOException, InterruptedException,
            ParserConfigurationException, SAXException {
        initComponents();
        
        this.departureCity = departureCity;
        this.arrivalCity = arrivalCity;
        this.departureDate = departureDate;
//        this.arrivalDate = arrivalDate;
        this.passenger = passenger;
        this.formattedDate = formattedDate;
        
        this.setBackground(new Color(1f, 1f, 1f, 0.2f));
        
        populateFlightSearchPane();
    }
    
    public void populateFlightSearchPane() throws IOException, InterruptedException, 
            ParserConfigurationException, SAXException {
        
        ArrayList<Flight> flightSearchList = FlightUtils
                .getListOfFlightSearch(this.departureCity, this.arrivalCity,
                        this.departureDate, this.formattedDate, this.passenger);
                
        setLayout(new GridLayout(flightSearchList.size(), 3, 0, 0));     
        for(Flight flight: flightSearchList) {
            for (int j=0; j<3; j++) {
                JLabel lbl = new JLabel();
                if(j == 0) {
                    lbl.setText(FlightDispalyUILabels.getHTMLFlightScheduleCode(
                            flight.getDepartingTimeStamp(),
                    flight.getArrivalTimeStamp(), flight.getDepartingCity(),
                    flight.getArrivalCity(), flight.getFlightCompanyCode(), 
                    flight.getFlightType(), flight.getFlightCompanyName()));
                }
                else if(j == 1) {
                    lbl.setText(FlightDispalyUILabels.getHTMLFlightDurationCode(flight.getTotalFlightDuration()));
                } else {
                    lbl.setText(FlightDispalyUILabels.getHTMLFlightPriceCode(this.passenger, flight.getPrice()));
                    Component comp = this;
                    lbl.addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent e) {
//                            JOptionPane.showMessageDialog(comp, "Clicked"
//                                    + flight.getFlightCompanyCode() + "-" + flight.getFlightType()
//                            + flight.getFlightCompanyName());
                            CallFlightUIPanels.callFlightUIPanels(passenger, flight);
                        }
                    });
                }
                lbl.setBorder(BorderFactory.createLineBorder(Color.BLACK));
                this.add(lbl); 
            }
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 664, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 292, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
